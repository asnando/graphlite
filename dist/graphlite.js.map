{"version":3,"sources":["webpack://graphlite/webpack/universalModuleDefinition","webpack://graphlite/webpack/bootstrap","webpack://graphlite/./src/utils/index.js","webpack://graphlite/./src/debugger/index.js","webpack://graphlite/./src/utils/type.js","webpack://graphlite/./node_modules/chalk/index.js","webpack://graphlite/./src/debugger/to-tab.js","webpack://graphlite/./src/utils/is-array.js","webpack://graphlite/./src/utils/is-def.js","webpack://graphlite/./src/utils/keys.js","webpack://graphlite/./src/utils/is-number.js","webpack://graphlite/./src/utils/is-object.js","webpack://graphlite/./node_modules/color-convert/conversions.js","webpack://graphlite/./src/index.js","webpack://graphlite/./src/utils/jtree.js","webpack://graphlite/./src/utils/create-hash-code.js","webpack://graphlite/./src/utils/is-boolean.js","webpack://graphlite/./src/utils/is-string.js","webpack://graphlite/./src/utils/is-function.js","webpack://graphlite/./src/utils/quote.js","webpack://graphlite/./src/utils/pbcopy.js","webpack://graphlite/./src/utils/xtend.js","webpack://graphlite/./src/utils/defaults.js","webpack://graphlite/./src/utils/pick-by.js","webpack://graphlite/./src/utils/equals.js","webpack://graphlite/./src/utils/copy.js","webpack://graphlite/./src/utils/jpretty.js","webpack://graphlite/./src/utils/omit.js","webpack://graphlite/./src/utils/get.js","webpack://graphlite/./src/utils/set.js","webpack://graphlite/./src/utils/glob.js","webpack://graphlite/./src/utils/accents.js","webpack://graphlite/./src/utils/query.js","webpack://graphlite/./src/utils/to-array.js","webpack://graphlite/./src/utils/pair.js","webpack://graphlite/./src/utils/hash.js","webpack://graphlite/./src/schema.js","webpack://graphlite/./src/debugger/debug.js","webpack://graphlite/./src/debugger/log.js","webpack://graphlite/./node_modules/process/browser.js","webpack://graphlite/./node_modules/escape-string-regexp/index.js","webpack://graphlite/./node_modules/ansi-styles/index.js","webpack://graphlite/(webpack)/buildin/module.js","webpack://graphlite/./node_modules/color-convert/index.js","webpack://graphlite/./node_modules/color-name/index.js","webpack://graphlite/./node_modules/color-convert/route.js","webpack://graphlite/./node_modules/supports-color/browser.js","webpack://graphlite/./node_modules/chalk/templates.js","webpack://graphlite/./src/debugger/tab-size.js","webpack://graphlite/./src/debugger/alert.js","webpack://graphlite/./src/debugger/warn.js","webpack://graphlite/./src/debugger/error.js","webpack://graphlite/./src/debugger/success.js","webpack://graphlite/./src/association.js","webpack://graphlite/./src/query/query.js","webpack://graphlite/./src/graph/graph.js","webpack://graphlite/./src/graph/graph-node.js","webpack://graphlite/./src/query/query-resolver.js","webpack://graphlite/./src/query/query-node.js","webpack://graphlite/./src/query/query-response.js","webpack://graphlite/./src/query/resolvers/main.js","webpack://graphlite/./src/query/resolvers/options.js","webpack://graphlite/./src/query/resolvers/groupId.js","webpack://graphlite/./src/query/resolvers/filterId.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","jtree","require","createHashCode","type","isArray","isBoolean","isNumber","isString","isObject","isFunction","isDef","quote","pbcopy","xtend","keys","defaults","pickBy","equals","copy","jpretty","omit","set","glob","query","toArray","pair","hash","debug","log","alert","warn","error","success","a","toString","replace","toLowerCase","process","escapeStringRegexp","ansiStyles","stdoutColor","stdout","template","isSimpleWindowsTerm","platform","WEBPACK_ENV","TERM","startsWith","levelMapping","skipModels","Set","styles","applyOptions","obj","options","scLevel","level","undefined","enabled","Chalk","this","chalk","args","slice","arguments","strings","Array","join","parts","raw","length","push","String","apply","concat","setPrototypeOf","constructor","blue","open","closeRe","RegExp","close","[object Object]","codes","build","_styles","_empty","visible","color","model","ansi","has","bgColor","toUpperCase","proto","defineProperties","builder","argsLen","str","originalDim","dim","hasGrey","code","reverse","self","__proto__","supportsColor","default","TAB_SIZE","message","rgxp","index","unshift","array","b","number","cssKeywords","reverseKeywords","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","Error","h","g","min","Math","max","delta","rdif","gdif","bdif","v","diff","diffc","k","reversed","currentClosestKeyword","x","y","currentClosestDistance","Infinity","distance","pow","z","t1","t2","t3","val","smin","lmin","hi","floor","f","q","sl","vmin","wh","bl","ratio","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","mult","rem","string","substring","match","colorString","split","map","char","integer","parseInt","hue","chroma","mg","pure","w","_","Schema","Query","DEFAULT_OBJECT_RESPONSE_NAME","DEFAULT_CONNECTION_PROVIDER_QUERY_RUNNER_NAME","opts","_connection","connection","_schema","schema","schemas","defineSchema","_queries","queries","defineQuery","_options","_schemaProvider","schemaName","find","_mergeOptions","page","size","_getQueryByName","queryName","_parseRows","usedQuery","rows","parseRows","JSON","parse","_translateToResponseObject","buildedIn","executedIn","parsedIn","_executeQueryOnDatabase","_executeQuery","rawQuery","then","_executeQueryWithOptions","Promise","resolve","reject","buildedQuery","exception","findOne","filter","findAll","schemaProvider","graph","tree","handler","path","parentNode","parentPath","forEach","node","nodeName","random","test","bol","fn","data","target","shift","dflt","parser","v1","v2","tabSize","stringify","ignores","keyName","pList","len","elem","accents","chars","e","u","charKeys","includes","letters","letterKeys","charAt","letter","ignore","reduce","paired","text","possible","Association","tableName","properties","_createSchemaProperties","belongs","props","_createSchemaProperty","prop","propName","propDef","propType","alias","resolver","primaryKey","_createAssociation","associationType","source","schemaFrom","schemaTo","targetHash","targetTable","targetKey","sourceHash","sourceTable","sourceKey","foreignTable","foreignKey","useSourceKey","objectType","using","hasMany","hasOne","belongsTo","belongsToMany","haveAssociationWith","selfKeys","_getAssociationKeys","schemaKeys","getAssociationOptionsWith","association","_getAssociation","_resolveAssociationTree","before","_createAssociationShadow","WEBPACK","console","from","arg","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","matchOperatorsRe","TypeError","colorConvert","wrapAnsi16","offset","wrapAnsi256","wrapAnsi16m","Map","modifier","reset","bold","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","magenta","cyan","white","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","grey","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","webpackPolyfill","deprecate","paths","children","conversions","route","fromModel","routes","toModel","wrappedFn","result","conversion","wrapRounded","wrapRaw","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","deriveBFS","models","parent","buildGraph","current","pop","adjacents","adjacent","link","to","wrapConversion","cur","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","fromCharCode","parseArguments","results","chunks","trim","matches","chunk","isNaN","escape","chr","Number","parseStyle","lastIndex","exec","buildStyle","layer","tmp","escapeChar","errMsg","DEFAULT_ASSOCIATION_JOIN_TYPE","resolveJoinType","Graph","QueryNode","QueryResponse","graphNodeResolver","graphNodeOptionsResolver","graphNodeGroupIdsResolver","graphRootNodeOptionsResolver","rawGraph","_resolveGraph","rowsParser","resolvedGraph","resolveSchemaName","parentNodeName","resolveParentName","parentSchema","hasParent","queryNode","schemaProperties","where","shows","staticOptions","orderBy","groupBy","parentAssociation","resolveAssociationOptions","nodeGraph","addNode","lastNodeHash","createResolver","lastNodeName","GraphNode","head","tail","nodeHash","parentHash","nodeResolvers","resolvers","setPreviousNode","getNode","addNextNode","getRawNode","getHeadNode","getHeadNodeHash","getTailNode","getTailNodeHash","walk","callback","QueryResolver","prevNode","nextNodes","getParent","resolverName","usePatch","defaultValue","nextNode","resolveNextNodes","resolvedNodes","nodes","DEFAULT_OBJECT_TYPE","definedProperties","_resolvePropertiesDefinition","definedOptions","nodeOptions","matchSchemaProp","getTableName","getTableAlias","getObjectType","getPrimaryKey","getFieldsAsJson","tableAlias","propValue","getResponseObjectName","getRawFields","getSource","parentUseGroup","getAssociation","usedFK","bolFK","joinType","sourceTableRef","sourceKeyRef","getJoin","getShowOptions","resolveOptionsWithValues","getOptions","rendersOnly","resolvedOptions","order","clauses","resolveWhere","gp","getSchemaPropertyConfig","resolveOrderBy","limit","staticSize","resolveLimit","resolveOffset","def","definedOptionKeys","optionName","propDefinitionFromSchema","definition","resolvedPropName","operator","opt","getAssociationName","getDistinctPrimaryKey","haveGroupByOption","shadow","createShadowFromGraph","stripNulls","toBoolean","toNumber","propPath","row","resolvedValue","customResolver","struct","filterQuery","nextNodeQuery","conditionClauses"],"mappings":"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","file":"graphlite.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"graphlite\"] = factory();\n\telse\n\t\troot[\"graphlite\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","const\tjtree           = require('./jtree'),\n      createHashCode  = require('./create-hash-code'),\n      type            = require('./type'),\n      isArray         = require('./is-array'),\n      isBoolean       = require('./is-boolean'),\n      isNumber        = require('./is-number'),\n      isString        = require('./is-string'),\n      isObject        = require('./is-object'),\n      isFunction      = require('./is-function'),\n      isDef           = require('./is-def'),\n      quote           = require('./quote'),\n      pbcopy          = require('./pbcopy'),\n      xtend           = require('./xtend'),\n      keys            = require('./keys'),\n      defaults        = require('./defaults'),\n      pickBy          = require('./pick-by'),\n      equals          = require('./equals'),\n      copy            = require('./copy'),\n      jpretty         = require('./jpretty'),\n      omit            = require('./omit'),\n      get             = require('./get'),\n      set             = require('./set'),\n      glob            = require('./glob'),\n      query           = require('./query'),\n      toArray         = require('./to-array'),\n      pair            = require('./pair'),\n      hash            = require('./hash');\n\nmodule.exports = {\n  jtree,\n  createHashCode,\n  type,\n  isArray,\n  isBoolean,\n  isNumber,\n  isString,\n  isObject,\n  isFunction,\n  isDef,\n  quote,\n  pbcopy,\n  xtend,\n  keys,\n  defaults,\n  pickBy,\n  equals,\n  copy,\n  jpretty,\n  omit,\n  get,\n  set,\n  glob,\n  query,\n  toArray,\n  pair,\n  hash,\n};","module.exports = {\n  debug: require('./debug'),\n  log: require('./log'),\n  alert: require('./alert'),\n  warn: require('./warn'),\n  error: require('./error'),\n  success: require('./success')\n}","module.exports = function type(a) {\n  return Object.prototype.toString.call(a).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","const TAB_SIZE = require('./tab-size.js');\n\nmodule.exports = function toTab(message) {\n  let rgxp = '\\n';\n  for (let index = 0; index < TAB_SIZE + 1; index++) rgxp += ' ';\n  message = message.replace(/\\n/g, rgxp);\n  message = [message];\n  for (let index = 0; index < TAB_SIZE - 1; index++) message.unshift(' ');\n  return message.join(' ');\n}\n\n","const type = require('./type');\n\nmodule.exports = function isArray(array) {\n  return type(array) === 'array';\n}","module.exports = function isDef(b) {\n  return typeof b !== 'undefined' && b !== null;\n}","module.exports = function keys(object) {\n  return Object.keys(object);\n}","const type = require('./type');\n\nmodule.exports = function isNumber(number) {\n  return type(number) === 'number';\n}","const type = require('./type');\n\nmodule.exports = function isObject(object) {\n  return type(object) === 'object';\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const _ = require('./utils');\nconst Schema = require('./schema');\nconst Query = require('./query/query');\nconst debug = require('./debugger');\n\nconst DEFAULT_OBJECT_RESPONSE_NAME = 'response';\nconst DEFAULT_CONNECTION_PROVIDER_QUERY_RUNNER_NAME = 'run';\n\nclass GraphLite {\n\n  constructor(opts) {\n    _.xtend(this, {\n      _connection: opts.connection,\n      _schema: _.defaults(opts.schema, [], (schemas) => {\n        return schemas.map(schema => this.defineSchema(schema));\n      }),\n      _queries: _.defaults(opts.queries, [], (queries) => {\n        return queries.map(query => this.defineQuery(query));\n      }),\n      _options: {},\n    });\n  }\n\n  _schemaProvider(schemaName) {\n    return this._schema.find(schema => schema.name === schemaName);\n  }\n\n  // Extra options(b) represents the second object received by the find\n  // functions. In this object there are page, size and some extra params.\n  _mergeOptions(a = {}, b = {}) {\n    return _.pickBy(_.xtend({}, a, {\n      page: b.page,\n      size: b.size\n    }));\n  }\n\n  _getQueryByName(queryName) {\n    return this._queries.find(query => query.name === queryName);\n  }\n\n  _parseRows(usedQuery, rows) {\n    return usedQuery.parseRows(rows.map(object => JSON.parse(object[DEFAULT_OBJECT_RESPONSE_NAME])));\n  }\n\n  _translateToResponseObject(rows) {\n    return {\n      rows,\n      buildedIn: 0,\n      executedIn: 0,\n      parsedIn: 0,\n    };\n  }\n\n  _executeQueryOnDatabase(query) {\n    return this._connection[DEFAULT_CONNECTION_PROVIDER_QUERY_RUNNER_NAME](query);\n  }\n\n  _executeQuery(rawQuery, query) {\n    return this._executeQueryOnDatabase(rawQuery)\n        .then(this._parseRows.bind(this, query))\n        .then(this._translateToResponseObject.bind(this));\n  }\n\n  _executeQueryWithOptions(queryName, options = {}) {\n    return new Promise((resolve, reject) => {\n\n      // Resolve query schema from the list.\n      const query = this._getQueryByName(queryName);\n      if (!query) return reject(`Undefined \"${queryName}\" query`);\n\n      let buildedQuery;\n\n      // Try to build the query.\n      try {\n        buildedQuery = query.build(options);\n      } catch (exception) {\n        return reject(exception);\n      }\n\n      return this._executeQuery(buildedQuery, query).then(resolve);\n    });\n  }\n\n  // ## Public methods\n  findOne(queryName, filter = {}, options = {}) {\n    options.size = 1;\n    return this._executeQueryWithOptions(queryName, this._mergeOptions(filter, options));\n  }\n\n  findAll(queryName, filter = {}, options = {}) {\n    return this._executeQueryWithOptions(queryName, this._mergeOptions(filter, options));\n  }\n\n  defineSchema(name, opts) {\n    const schemaProvider = this._schemaProvider.bind(this);\n    opts = _.isObject(name) ? name : opts;\n    name = _.isObject(name) ? name.name : name;\n    const schema = new Schema(name, opts, schemaProvider);\n    this._schema.push(schema);\n    return schema;\n  }\n\n  defineQuery(name, graph) {\n    const schemaProvider = this._schemaProvider.bind(this);\n    graph = _.isObject(name) ? name : graph;\n    name = _.isObject(name) ? name.name : name;\n    const query = new Query(name, graph, schemaProvider);\n    this._queries.push(query);\n    return query;\n  }\n\n}\n\nmodule.exports = GraphLite;\n\n","const isArray = require('./is-array');\nconst isNumber = require('./is-number');\nconst isObject = require('./is-object');\n\nmodule.exports = function jtree(tree, handler, path, parentNode, parentPath, options) {\n  path = path || '$';\n  options = options || {};\n  if (typeof handler === 'function') {\n    options = handler(tree, path, options, parentNode, parentPath);\n  }\n  if (isArray(tree)) {\n    tree.forEach((node, index) => {\n      jtree(node, handler, path.concat('#').concat(index), tree, path, options);\n    });\n  } else if (isObject(tree)) {\n    Object.keys(tree).forEach(nodeName => {\n      if (isNumber(nodeName)) return;\n      jtree(tree[nodeName], handler, path.concat('.').concat(nodeName), tree, path, options);\n    });\n  }\n}","module.exports = function createHashCode() {\n  let h = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  return /^\\d/.test(h) ? createHashCode() : h;\n}","const type = require('./type');\n\nmodule.exports = function isBoolean(bol) {\n  return typeof(bol) === 'boolean';\n}","const type = require('./type');\n\nmodule.exports = function isString(string) {\n  return type(string) === 'string';\n}","const type = require('./type');\n\nmodule.exports = function isFunction(fn) {\n  return type(fn) === 'function';\n}","module.exports = function quote(string) {\n  return `'${string}'`;\n}","module.exports = function pbcopy(data) {\n  if (!process.env.WEBPACK_ENV) {\n    var proc = require('child_process').spawn('pbcopy'); \n    proc.stdin.write(data); proc.stdin.end();\n  }\n}","module.exports = function xtend() {\n  var args = [].slice.call(arguments);\n  var target = args.shift() || {};\n  args.forEach(function(object) {\n    for (var key in object) {\n      if (object.hasOwnProperty(key))\n        target[key] = object[key];\n    }\n  });\n  return target;\n}","const isDef = require('./is-def');\n\nmodule.exports = function defaults(value, dflt, parser) {\n  return isDef(value) && isDef(parser) ? parser(value) : isDef(value) ? value : dflt;\n}","const isDef = require('./is-def');\n\nmodule.exports = function pickBy(object) {\n  for (key in object) {\n    if (!isDef(object[key]))\n      delete object[key];\n  }\n  return object;\n}","module.exports = function equals(v1, v2) {\n  return v1 === v2;\n}","module.exports = function copy(object) {\n  return {...object};\n}","module.exports = function jpretty(object, tabSize = 2) {\n  return JSON.stringify(object, null, tabSize);\n}","module.exports = function omit(object, ignores) {\n  ignores.forEach(keyName => delete object[keyName]);\n  return object;\n}","module.exports = function get(obj, path) {\n  var schema = obj;  // a moving reference to internal objects within obj\n  var pList = path.split('.');\n  var len = pList.length;\n  for(var i = 0; i < len-1; i++) {\n      var elem = pList[i];\n      if( !schema[elem] ) schema[elem] = {}\n      schema = schema[elem];\n  }\n  return schema[pList[len-1]];\n}","// const isString = require('./is-string');\n// const isObject = require('./is-object');\n// const isArray = require('./is-array');\n\n// module.exports = function set(object, path, value) {\n//   if (isString(path)) {\n//     path = path.split(/[\\.\\#]/);\n//   } \n//   const beginsWith = path.shift();\n//   // Beginning of the object, ignores...\n//   if (/^\\$$/.test(beginsWith)) {\n//     return set(object, path, value);\n//   }\n//   // The node where to set value.\n//   if (!path.length) {\n//     if (object.hasOwnProperty(beginsWith)) {\n//       object[beginsWith] = value;\n//     }\n//     return object;\n//   }\n//   // Loop to the next node.\n//   if (isObject(object) && object.hasOwnProperty(beginsWith)) {\n//     return set(object[beginsWith], path, value);\n//   }\n//   if (isArray(object) && object[beginsWith]) {\n//     return set(object[beginsWith], path, value);\n//   }\n//   return object;\n// }\n\nmodule.exports = function set(obj, path, value) {\n  var schema = obj;  // a moving reference to internal objects within obj\n  var pList = path.split('.');\n  var len = pList.length;\n  for(var i = 0; i < len-1; i++) {\n      var elem = pList[i];\n      if( !schema[elem] ) schema[elem] = {}\n      schema = schema[elem];\n  }\n  schema[pList[len-1]] = value;\n}","const keys    = require('./keys'),\n      accents = require('./accents');\n\nmodule.exports = function glob(value) {\n  const chars = {\n    a: \"[AÁÀÂÄÃªaáàâäã]\",\n    e: \"[EÉÈÊËeéèêë]\",\n    i: \"[IÍÌÎÏiíìîï]\",\n    o: \"[OÓÒÔÖÕºoóòôöõ]\",\n    u: \"[UÚÙÛÜuúùûü]\",\n    c: \"[CÇcç]\"\n  };\n  value = accents(value);\n  const charKeys = keys(chars);\n  return '*' + value.split('').map(char => {\n    return charKeys.includes(char) ? chars[char] : `[${char.toUpperCase()}${char}]`;\n  }).join('') + '*';\n}","const keys = require('./keys');\n\nmodule.exports = function accents(value) {\n  const letters = {\n    a: ['á', 'à', 'â', '', 'ã', 'ª'],\n    e: ['é', 'è', 'ê', ''],\n    i: ['í', 'ì', 'î', ''],\n    o: ['ó', 'ò', 'ô', '', 'õ', 'º'],\n    u: ['ú', 'ù', 'û', ''],\n    c: ['ç'],\n  };\n  value = value.toLowerCase();\n  const letterKeys = keys(letters);\n  for (let a = 0; a < value.length; a++) {\n    const char = value.charAt(a);\n    letterKeys.forEach(letter => {\n      if (letters[letter].includes(char)) {\n        value = value.replace(value.charAt(a), letter);\n      }\n    });\n  }\n  return value;\n}","module.exports = function queryFormat(query) {\n  if (!process.env.WEBPACK_ENV) {\n    const SQLFormatter = require('sql-formatter');\n    return SQLFormatter.format(query);\n  }\n  return query;\n}","const isArray = require('./is-array');\n\nmodule.exports = function toArray(array) {\n  return typeof array === 'undefined' ? [] : isArray(array) ? array : [array];\n}","module.exports = function pair(array, ignore = false, dflt) {\n  return array.reduce((paired, value, index) => {\n    if (!(index % 2)) {\n      paired.push([value]);\n    } else {\n      paired[paired.length - 1].push(value);\n    }\n    return paired;\n  }, []).map(array => {\n    if (!ignore && array.length < 2) {\n      array.push(dflt);\n    }\n    return array;\n  });\n}","module.exports = function hash(length = 15) {\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < length; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}","const debug = require('./debugger');\nconst  _ = require('./utils/');\nconst Association = require('./association');\n\nclass Schema {\n\n  constructor(name, opts, schemaProvider) {\n    this.schemaProvider = schemaProvider;\n    this.name = name;\n    this.tableName = opts.tableName;\n    this.hash = _.createHashCode();\n    this.properties = this._createSchemaProperties(opts.properties);\n    this.has = {};\n    this.belongs = {};\n    if (!this.tableName) {\n      throw new Error(`Missing table name definition for \"${this.name}\" schema.`);\n    }\n  }\n\n  _createSchemaProperties(props) {\n    props = _.keys(props).map(keyName => {\n      return this._createSchemaProperty(keyName, props[keyName])\n    });\n    // Schema must always declare one primary key property.\n    if (!props.find(prop => prop.type === 'primaryKey')) {\n      throw new Error(`Missing primary key definition for \"${this.name}\" schema.`);\n    }\n    return props;\n  }\n\n  _createSchemaProperty(propName, propDef) {\n    const propType = _.isString(propDef) ? propDef : !!propDef.type ? propDef.type : 'default';\n\n    const property = _.pickBy({\n      name:     propName,\n      type:     propType,\n      alias:    propDef.alias,\n      resolver: propDef.resolve,\n      join:     propDef.join,\n      parser:   propDef.parser,\n    });\n\n    if (propType === 'primaryKey') {\n      this.primaryKey = property.name;\n    }\n\n    return property;\n  }\n\n  _createAssociation(schema, options, associationType) {\n    const has = /^has/.test(associationType);\n    const belongs = /^belongs/.test(associationType);\n    const source = has ? this : belongs ? this : schema;\n    const target = has ? schema : belongs ? schema : this;\n    const association = new Association({\n      schemaFrom:   this.name,\n      schemaTo:     schema.name,\n      targetHash:   target.hash,\n      targetTable:  target.tableName,\n      targetKey:    target.primaryKey,\n      sourceHash:   source.hash,\n      sourceTable:  source.tableName,\n      sourceKey:    source.primaryKey,\n      foreignTable: options.foreignTable,\n      foreignKey:   options.foreignKey,\n      useSourceKey: options.useSourceKey,\n      type:         options.type,\n      objectType:   /many/i.test(associationType) ? 'array' : 'object',\n      using:        (options.using || []).map(schemaName => this.schemaProvider(schemaName)),\n      associationType,\n    });\n    return association;\n  }\n\n  hasMany(schema, options = {}) {\n    this.has[schema.name] = this._createAssociation(schema, options, 'hasMany');\n  }\n\n  hasOne(schema, options = {}) {\n    this.has[schema.name] = this._createAssociation(schema, options, 'hasOne');\n  }\n\n  belongsTo(schema, options = {}) {\n    this.belongs[schema.name] = this._createAssociation(schema, options, 'belongsTo');\n  }\n\n  belongsToMany(schema, options = {}) {\n    this.belongs[schema.name] = this._createAssociation(schema, options, 'belongsToMany');\n  }\n\n  haveAssociationWith(schema) {\n    const selfKeys = this._getAssociationKeys();\n    const schemaKeys = schema._getAssociationKeys();\n    return selfKeys.includes(schema.name) || schemaKeys.includes(this.name);\n  }\n\n  getAssociationOptionsWith(schema) {\n    const association = this._getAssociation(schema, this);\n    if (!association) {\n      throw new Error(`No association found between \"${schema.name}\" and \"${this.name}\".`);\n    }\n    return !association.using.length ? association\n      : this._resolveAssociationTree(schema, this, association);\n  }\n\n  _getAssociation(a, b) {\n    // Directly access the external schema associations object.\n    return (a.has[b.name] || a.belongs[b.name]) || (b.has[a.name] || b.belongs[a.name]);\n    // return (a.has[b.name] || b.belongs[a.name]) || (b.has[a.name] || a.belongs[b.name]);\n  }\n\n  // Used when the association options contains the \"using\" key that must\n  // resolve each association between the two schemas.\n  _resolveAssociationTree(a, b, association) {\n    // Note.: from parent to child.\n    return [a, ...association.using, b].reduce((value, schema, index, self) => {\n      if (!index) {\n        return value;\n      } else {\n        const before = self[index - 1];\n        const association = this._getAssociation(before, schema);\n        return value.concat(association);\n      }\n    }, []);\n  }\n\n  _createAssociationShadow(association) {\n    return {\n      sourceHash:   association.sourceHash,\n      sourceTable:  association.sourceTable,\n      sourceKey:    association.sourceKey,\n      targetHash:   association.targetHash,\n      targetTable:  association.targetTable,\n      targetKey:    association.targetKey,\n      foreignTable: association.foreignTable,\n      foreignKey:   association.foreignKey,\n      objectType:   association.objectType,\n      type:         association.type\n    };\n  }\n\n  _getAssociationKeys(schema = this) {\n    const h = _.keys(schema.has);\n    const b = _.keys(schema.belongs);\n    return {\n      has: h,\n      belongs: b,\n      includes: (name) => [...h, ...b].includes(name),\n    };\n  }\n\n}\n\nmodule.exports = Schema;","module.exports = !process.env.WEBPACK ? console.log : function(){};","const chalk = require('chalk');\nconst toTab = require('./to-tab');\n\nmodule.exports = function success() {\n  const m = Array\n    .from(arguments)\n    .map(arg => typeof arg === 'object' ? JSON.stringify(arg, null, 2) : arg)\n    .join(' ');\n  if (!process.env.WEBPACK_ENV) {\n    console.log(toTab(m));\n  }\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","module.exports = 3;","const chalk = require('chalk');\nconst toTab = require('./to-tab');\n\nmodule.exports = function warn() {\n  const m = Array\n    .from(arguments)\n    .map(arg => typeof arg === 'object' ? JSON.stringify(arg, null, 2) : arg)\n    .join(' ');\n  if (!process.env.WEBPACK_ENV) {\n    console.log(chalk.magenta(toTab(m)));\n  }\n}","const chalk = require('chalk');\nconst toTab = require('./to-tab');\n\nmodule.exports = function warn() {\n  let m = Array\n    .from(arguments)\n    .map(arg => typeof arg === 'object' ? JSON.stringify(arg, null, 2) : arg)\n    .join(' ');\n  if (!process.env.WEBPACK_ENV) {\n    console.log(chalk.yellow(toTab(m)));\n  }\n}","const chalk = require('chalk');\nconst toTab = require('./to-tab');\n\nmodule.exports = function warn() {\n  const m = Array\n    .from(arguments)\n    .map(arg => typeof arg === 'object' ? JSON.stringify(arg, null, 2) : arg)\n    .join(' ');\n  if (!process.env.WEBPACK_ENV) {\n    console.log(chalk.red(toTab(m)));\n  }\n}","const chalk = require('chalk');\nconst toTab = require('./to-tab');\n\nmodule.exports = function success() {\n  const m = Array\n    .from(arguments)\n    .map(arg => typeof arg === 'object' ? JSON.stringify(arg, null, 2) : arg)\n    .join(' ');\n  if (!process.env.WEBPACK_ENV) {\n    console.log(chalk.green(toTab(m)));\n  }\n}","const _ = require('./utils');\nconst debug = require('./debugger');\n\nconst DEFAULT_ASSOCIATION_JOIN_TYPE = 'inner';\n\n// Associations contains the names from source, target \n// and foreign tables and primary keys. The methods of this class are\n// responsible to resume the associations returning a SQL query\n// within its respective joins.\nclass Association {\n\n  constructor(opts = {}) {\n    // For reference: \n    // target = the actual table which it have relation from.\n    // source = the parent table which it is related to.\n    // foreign = the table between the source and target.\n    _.xtend(this, {\n      schemaFrom:       opts.schemaFrom,\n      schemaTo:         opts.schemaTo,\n      sourceHash:       opts.sourceHash,\n      sourceTable:      opts.sourceTable,\n      sourceKey:        opts.sourceKey,\n      targetHash:       opts.targetHash,\n      targetTable:      opts.targetTable,\n      targetKey:        opts.targetKey,\n      foreignTable:     opts.foreignTable,\n      foreignKey:       opts.foreignKey,\n      associationType:  opts.associationType,\n      objectType:       opts.objectType,\n      type:             opts.type || DEFAULT_ASSOCIATION_JOIN_TYPE,\n      using:            opts.using || [],\n      useSourceKey:     opts.useSourceKey,\n    });\n  }\n\n  resolveJoinType() {\n    return this.type.toUpperCase();\n  }\n\n}\n\nmodule.exports = Association;","const debug = require('../debugger');\nconst  _ = require('../utils/');\nconst Graph = require('../graph/graph');\nconst QueryNode = require('./query-node');\nconst QueryResponse = require('./query-response');\n\nconst graphNodeResolver             = require('./resolvers/main');\nconst graphNodeOptionsResolver      = require('./resolvers/options');\nconst graphNodeGroupIdsResolver     = require('./resolvers/groupId');\nconst graphRootNodeOptionsResolver  = require('./resolvers/filterId');\n\nclass Query {\n\n  // Query is basically a graph which nodes represents\n  // each schema declared or associated in the query definition graph.\n  constructor(name, graph, schemaProvider) {\n    // Queries will be builded and resolved by their names.\n    this.name = name;\n    // Save raw graph definition if it needs to be used later.\n    this.rawGraph = graph;\n    // The \"schemaProvider\" is a function received from this main lib class\n    // which returns the schema instance using its name. All schemas\n    // are accessible in the main lib instance.\n    this.schemaProvider = schemaProvider;\n    // This will be the resolved graph which will resolve the query.\n    this.graph = this._resolveGraph(this.rawGraph);\n    this.rowsParser = new QueryResponse(this.graph);\n  }\n\n  _resolveGraph(graph) {\n\n    let resolvedGraph = new Graph();\n    const schemaProvider = this.schemaProvider;\n\n    // In order to create the query graph we need to\n    // check which paths represents a schema and which do not.\n    _.jtree(graph, (node, path, options) => {\n\n      // Check if the walked path represents a schema name.\n      if (/^\\$$/.test(path) ||\n        (/(?<=\\.(where|shows)\\.)\\w+$/.test(path)) ||\n        (/(?<=\\.options)/.test(path)) ||\n        (/(using|throught|shows|options|alias|properties|\\d|where|groupBy|size|page|orderBy|type)$/.test(path))\n      ) return;\n\n      const schemaName = node.alias || resolveSchemaName(path);\n\n      const schema = schemaProvider(schemaName);\n      \n      if (!schema) {\n        throw new Error(`Could not detect schema configuration for \"${schemaName}\".`);\n      }\n\n      function resolveParentName(path) {\n        // Ex.: $.some.path.(parentName).schema\n        return path.match(/\\./g).length === 1 ? null : path.match(/(\\w+)\\.\\w+$/)[1];\n      }\n\n      function resolveSchemaName(path) {\n        // Ex.: $.some.path.parentName.(schema)\n        return path.split('.').pop();\n      }\n\n      const parentNodeName = resolveParentName(path);\n      const parentSchema = options.parent;\n      const hasParent = !!parentSchema;\n\n      // The association with parent must be validated when a\n      // schema is not the root collection of the query. The association must\n      // be valid in two ways, parent has one/many of this and this belongs to parent.(for now)\n      if (hasParent && !schema.haveAssociationWith(parentSchema)) {\n        throw new Error(`\"${schema.name}\" have no relation with \"${parentNodeName}\".`);\n      }\n\n      function resolveAssociationOptions(schema, parent) {\n        return !hasParent ? null : schema.getAssociationOptionsWith(parent);\n      }\n\n      // A QueryNode represents the real value of the node\n      // inside the graph. This value will be avaiable in the query\n      // node resolver.\n      // In this case we are copying the schema definition and adding\n      // some extra options and methods(avaible in this class) to make\n      // our query resolution more easy.\n      const queryNode = new QueryNode({\n        name:       schema.name,\n        alias:      node.alias && resolveSchemaName(path),\n        hash:       schema.hash,\n        tableName:  schema.tableName,\n        properties: node.properties,\n        schemaProperties: schema.properties,\n        primaryKey: schema.primaryKey,\n        options:    node.where,\n        shows:      node.shows,\n        staticOptions: {\n          page:     node.page,\n          size:     node.size,\n          orderBy:  node.orderBy,\n          groupBy:  node.groupBy,\n        },\n        parentAssociation: resolveAssociationOptions(schema, parentSchema)\n      });\n\n      // Adds a new node to the query graph. Creating a graph node\n      // class is useful to loop throught the nodes in a automatic way.\n      const nodeGraph = resolvedGraph.addNode(\n        schema.hash,\n        queryNode,\n        options.lastNodeHash\n      );\n\n      // Resolvers are functions which receives a node from the graph and\n      // returns a parsed query.\n      // Add some defined resolvers to this graph node.\n      // The \"main\" resolver will resolves the SQL select using the\n      // json1 extension and it respectives source and joined tables.\n      nodeGraph.createResolver('main', graphNodeResolver, true);\n      // The \"filterId\" resolver will resolve the general where clause which\n      // is responsible in getting the distinct ids of the root collection which\n      // will be used as filter to the query.\n      nodeGraph.createResolver('filterId', graphRootNodeOptionsResolver, false, '');\n      // #\n      nodeGraph.createResolver('options', graphNodeOptionsResolver);\n      // \n      nodeGraph.createResolver('groupId', graphNodeGroupIdsResolver);\n\n      // \"jtree\" function accepts a returned object that will be defined\n      // to the next walk node. In some cases these options are used to\n      // access the previous walked schema.\n      return {\n        lastNodeHash: schema.hash,\n        lastNodeName: schema.name,\n        parent: schema\n      }\n\n    });\n    return resolvedGraph;\n  }\n\n  build(options = {}) {\n    return this.graph.resolve('main', _.pickBy(options));\n  }\n\n  parseRows(rows) {\n    return this.rowsParser.parse(rows);\n  }\n\n}\n\nmodule.exports = Query;","const _ = require('../utils');\nconst debug = require('../debugger');\nconst GraphNode = require('./graph-node');\n\n// This class is a representation of a simple graph.\n// We use a graph to make the loop into the queries nodes\n// be more easy to compreend and resolve. Usually the head node\n// resolver is called until all the nodes are resolved in a \n// recursive way.\nclass Graph {\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.graph = {};\n  }\n\n  addNode(nodeHash, node, parentHash, nodeResolvers) {\n    // Sets the head if not defined yet\n    this.head = this.head || nodeHash;\n    // Creates a node witin the hash\n    node = new GraphNode({\n      nodeHash,\n      resolvers: nodeResolvers,\n      node\n    });\n    // Adds the new node to the graph\n    this.graph[nodeHash] = node;\n    if (!!this.tail) {\n      // Sets tail node as previous node\n      node.setPreviousNode(this.getNode(parentHash || this.tail));\n      // Add this node as the next node to the previous\n      this.getNode(parentHash || this.tail).addNextNode(node);\n    }\n    // Updates the last registered node.\n    this.tail = nodeHash;\n    return node;\n  }\n\n  getNode(nodeHash) {\n    return this.graph[nodeHash];\n  }\n  getRawNode(nodeHash) {\n    return this.graph[nodeHash].raw();\n  }\n  getHeadNode() {\n    return this.graph[this.getHeadNodeHash()];\n  }\n  getTailNode() {\n    return this.graph[this.getTailNodeHash()];\n  }\n  getHeadNodeHash() {\n    return this.head;\n  }\n  getTailNodeHash() {\n    return this.tail;\n  }\n  resolve(resolver, options) {\n    return this.getHeadNode().resolve(resolver, options);\n  }\n  walk(callback) {\n    return this.getHeadNode().walk(callback);\n  }\n}\n\nmodule.exports = Graph;","const _ = require('../utils');\nconst debug = require('../debugger');\nconst QueryResolver = require('../query/query-resolver');\n\n// This class represents the nodes of a graph in a unique way.\n// This basically expose a resolver which is called by the graph\n// class instance. The graph calls the head node and it keeps resolving\n// until the last node (throught the nextNodes function).\nclass GraphNode {\n\n  constructor(opts) {\n    this.prevNode = null;\n    this.nextNodes = [];\n    this.node = opts.node;\n    this.resolvers = {};\n  }\n\n  getParent() {\n    return this.prevNode ? this.prevNode() : null;\n  }\n\n  setPreviousNode(node) {\n    return this.prevNode = node;\n  }\n\n  addNextNode(node) {\n    return this.nextNodes.push(node);\n  }\n  \n  resolve(resolverName, options, parent) {\n    if (!this.resolvers[resolverName]) {\n      throw new Error(`Undefined resolver \"${resolverName}\".`);\n    }\n    return this.resolvers[resolverName].resolve(this, options, parent);\n  }\n\n  raw() {\n    return this.node;\n  }\n\n  createResolver(name, resolver, usePatch, defaultValue) {\n    this.resolvers[name] = new QueryResolver(name, resolver, usePatch, defaultValue);\n  }\n\n  walk(callback) {\n    callback(this.raw());\n    if (this.nextNodes.length) {\n      this.nextNodes.forEach(nextNode => {\n        if (_.isFunction(nextNode.walk)) nextNode.walk(callback)\n      });\n    }\n  }\n\n}\n\nmodule.exports = GraphNode;","const _ = require('../utils');\nconst debug = require('../debugger');\n\n// This class is responsible to call the respective resolve\n// functions and loop thought the next nodes to fully resolves\n// one node from the graph.\nclass QueryResolver {\n\n  constructor(name, resolver, usePatch = false, defaultValue = 'json_object()') {\n    this.name = name;\n    this.resolver = resolver;\n    this.usePatch = usePatch;\n    this.defaultValue = defaultValue;\n  }\n\n  resolve(node, options, parent) {\n    // The function defined as resolver will receive the raw\n    // node(e.g QueryNode), options object(containing the where\n    // clause from user), a function which will render the next nodes,\n    // and a custom resolve caller which one resolver can call another\n    // different resolver by its name.\n    return this.resolver(\n      node.raw(),\n      options,\n      this.resolveNextNodes.bind(this, node, options, node.raw()),\n      node.resolve.bind(node),\n      parent,\n    );\n  }\n\n  resolveNextNodes(node, options, parent) {\n\n    let nextNodes = node.nextNodes;\n\n    const usePatch = this.usePatch;\n    const defaultValue = this.defaultValue;\n\n    // Usually the nextNodes function is always called (if when there is no next nodes).\n    // In this cases, we return a default value to prevent th query from breaking.\n    if (!nextNodes.length) {\n      return this.defaultValue;\n    }\n\n    // \"json_patch\" function only works with paired objects.\n    // Adds a extra empty node if it is not yet paired.\n    // Create paired array ignoring missing data on each pair.\n    nextNodes = _.pair(nextNodes, false, defaultValue);\n\n    // Resolve the query value of each node.\n    let resolvedNodes = nextNodes.map(pair => {\n      return pair.map(node => {\n        return _.isFunction(node.resolve) ? node.resolve(this.name, options, parent) : node;\n      });\n    });\n\n    if (!usePatch) {\n      resolvedNodes = resolvedNodes.map(value => value.join(' ')).join(' ');\n    } else {\n      resolvedNodes = resolvedNodes.map(nodes => {\n        nodes = nodes.map(node => {\n          return (!/^\\(/.test(node) && !/\\)$/.test(node)) ? `(${node})` : node;\n        });\n        if (nodes.length > 1) {\n          return `json_patch(${nodes.join(',')})`;\n        } else {\n          return nodes[0];\n        }\n      });\n      resolvedNodes = (resolvedNodes.length > 1) ? `json_patch(${resolvedNodes})` : resolvedNodes[0];\n    }\n      \n    return resolvedNodes;\n  }\n\n}\n\nmodule.exports = QueryResolver;","const _ = require('../utils');\nconst debug = require('../debugger');\n\nconst DEFAULT_OBJECT_RESPONSE_NAME = 'response';\nconst DEFAULT_OBJECT_TYPE = 'object';\nconst DEFAULT_PAGE_DATA_LIMIT = 100;\n\n// The QueryNode represents the real value of a node\n// inside the graph of the defined query. It is responsible\n// to resolve each part of the query for that specific node.\nclass QueryNode {\n\n  constructor(opts = {}) {\n    _.xtend(this, {\n      name: opts.name,\n      alias: opts.alias,\n      hash: opts.hash,\n      properties: opts.properties,\n      schemaProperties: _.defaults(opts.schemaProperties, []),\n      // Merged options array.\n      definedProperties: this._resolvePropertiesDefinition(\n        opts.schemaProperties,\n        opts.properties\n      ),\n      tableName: opts.tableName,\n      primaryKey: opts.primaryKey,\n      parentAssociation: opts.parentAssociation,\n      // Defined options refers to the \"where conditions\"\n      // definition of the query. It will be a object within\n      // the property name to filter and the respective key name\n      // that will be received by the find methods.\n      definedOptions: _.defaults(opts.options, {}),\n      // Static values defined for [size, orderBy, groupBy, page]\n      // inside the query graph.\n      staticOptions: opts.staticOptions,\n      nodeOptions: _.defaults(opts.shows, {}),\n    });\n  }\n\n  // Merge the options array defined in the query graph and\n  // properties from schema. After the merge it translate\n  // the properties to the final model which will be used\n  // in the query construction.\n  _resolvePropertiesDefinition(schemaProperties, props) {\n    function matchSchemaProp(propName, schemaProperties) {\n      return schemaProperties.find(prop => prop.name === propName);\n    }\n    return (!props || _.isString(props))\n      ? schemaProperties\n      : props\n        .filter(propName => matchSchemaProp(propName, schemaProperties))\n        .map(propName => matchSchemaProp(propName, schemaProperties));\n  }\n\n  getTableName() {\n    return this.tableName;\n  }\n\n  getTableAlias() {\n    return this.hash;\n  }\n\n  getObjectType() {\n    return !!this.parentAssociation ? this.parentAssociation.objectType : DEFAULT_OBJECT_TYPE;\n  }\n\n  getPrimaryKey() {\n    return this.primaryKey;\n  }\n\n  getFieldsAsJson() {\n    // Returns format: 'fieldName', tableAlias.(fieldAlias || fieldName)\n    const tableAlias = this.getTableAlias();\n\n    return this.definedProperties.filter(prop => {\n      return !this.parentAssociation || prop.type !== 'primaryKey';\n    }).map(prop => {\n\n      let propName = prop.type === 'primaryKey' ? '_id' : prop.name,\n          propValue;\n\n      if (prop.resolver) {\n        propValue = '(CASE' + prop.resolver.map(name => ` WHEN ${tableAlias}.${name} IS NOT NULL THEN ${tableAlias}.${name}`).join(' ') + ' END)';\n      } else if (prop.join) {\n        propValue = prop.join.join(' || ');\n      } else {\n        propValue = tableAlias.concat('.').concat(prop.alias || prop.name);\n      }\n\n      switch (prop.type) {\n        case 'boolean':\n          propValue = `(CASE WHEN ${propValue} IS NOT NULL AND ${propValue}<>0 THEN 1 ELSE 0 END)`;\n          break;\n        case 'integer':\n          propValue = `cast(${propValue} as integer)`;\n          break;\n        case 'number':\n          propValue = `cast(${propValue} as real)`;\n          break;\n      };\n\n      return [\n        _.quote(propName),\n        propValue\n      ].join(',');\n\n    }).join(',');\n  }\n\n  getResponseObjectName() {\n    return !this.parentAssociation ? DEFAULT_OBJECT_RESPONSE_NAME : '';\n  }\n\n  getRawFields() {\n    return '*';\n    return `${this.getTableName()}.*`;\n  }\n\n  getSource(parentUseGroup) {\n    return `FROM ${this.getTableName()} ${this.getAssociation(parentUseGroup)}`;\n  }\n\n  // Will render the respective associations joins inside each node of the query.\n  getAssociation(parentUseGroup = false) {\n\n    let usedFK = false;\n    \n    return !this.parentAssociation ? '' : _.toArray(this.parentAssociation).map((association, index, self) => {\n      const bolFK = !!association.foreignTable && !!association.foreignKey;\n      const joinType = association.resolveJoinType();\n\n      if (bolFK) {\n        usedFK = true;\n        return [\n          `${joinType} JOIN ${association.foreignTable} ON ${association.foreignTable}.${association.sourceKey}=${association.sourceHash}.${association.sourceKey}`,\n          self.length > 1\n            ? `${joinType} JOIN ${association.targetTable} ON ${association.targetTable}.${association.targetKey}=${association.foreignTable}.${association.targetKey}`\n            : `WHERE ${association.targetTable}.${association.targetKey}=${association.foreignTable}.${association.targetKey}`\n        ].join(' ');\n      }\n\n      // When parent node have groupBy option defined in the query schema it\n      // will use the json_each built in SQLite function to resolve the relation\n      // between this node ids and the previous grouped ids.\n      if (parentUseGroup) {\n        return `, json_each(${association.sourceHash}.id_${association.targetKey}) WHERE ${association.targetTable}.${association.targetKey}=json_each.value`;\n      }\n\n      // Note.: When association of type \"belongs\" then use the sourceHash (which\n      // represents the previous node data) instead of the root table name. It is\n      // used when there it does not have foreignKey at any point of this association too.\n      const sourceTableRef = (/^belongs/.test(association.associationType) || !usedFK)\n        ? association.sourceHash : association.sourceTable;\n      // Custom source key.\n      const sourceKeyRef = association.useSourceKey || association.targetKey;\n      return `WHERE ${association.targetTable}.${association.targetKey}=${sourceTableRef}.${sourceKeyRef}`;\n    }).join(' ');\n  }\n\n  // This join will be rendered in the root of the query (where we fetch the root\n  // collection schema ids).\n  getJoin() {\n    return !this.parentAssociation ? '' :  _.toArray(this.parentAssociation).map(association => {\n      const bolFK = !!association.foreignTable && !!association.foreignKey;\n      const joinType = association.resolveJoinType();\n      // Quick Fix: Ignore join when it is a belongs association.\n      // Gererally in that cases the asssociation have already been rendered\n      // by the parent/association that have the \"has\" association type.\n      if (/^belongs/.test(association.associationType)) {\n        return '';\n      } else if (bolFK) {\n        return `${joinType} JOIN ${association.foreignTable} ON ${association.foreignTable}.${association.sourceKey}=${association.sourceTable}.${association.sourceKey} ${joinType} JOIN ${association.targetTable} ON ${association.targetTable}.${association.targetKey}=${association.foreignTable}.${association.targetKey}`;\n      } else {\n        const sourceKeyRef = association.useSourceKey || association.targetKey;\n        return `${joinType} JOIN ${association.targetTable} ON ${association.targetTable}.${association.targetKey}=${association.sourceTable}.${sourceKeyRef}`;\n      }\n    }).join(' ');\n  }\n\n  getShowOptions(options) {\n    options = this.resolveOptionsWithValues(this.nodeOptions, options);\n    return !options.length ? '' : `AND ${options.join(' AND ')}`;\n  }\n\n  getOptions(options = {}, rendersOnly = []) {\n\n    const self = this;\n\n    const resolvedOptions = this.resolveOptionsWithValues(this.definedOptions, options);\n\n    function resolveWhere(options) {\n      return (options && options.length)\n        ? ' WHERE '.concat(options.join(' AND '))\n        : '';\n    }\n\n    function resolveOffset(page, size) {\n      return (!self.parentAssociation && page && size) ? ' OFFSET '.concat(((page - 1) * size)) : '';\n    }\n\n    function resolveGroupBy(gp) {\n      if (!gp || !gp.length) return '';\n      return ' GROUP BY ' + gp.map(propName => {\n        const prop = self.getSchemaPropertyConfig(propName);\n        if (!prop) {\n          throw new Error(`Undefined \"${propName}\" property configuration on \"${self.name}\" schema for grouping.`);\n        }\n        return prop.alias || prop.name;\n      }).map(prop => self.getTableName().concat('.').concat(prop));\n    }\n\n    function resolveOrderBy(order) {\n      if (!order || !order.length) return '';\n      return ' ORDER BY ' + order.map(propName => {\n        const prop = self.getSchemaPropertyConfig(propName);\n        if (!prop) {\n          throw new Error(`Undefined \"${propName}\" property configuration on \"${self.name}\" schema for ordering.`);\n        }\n        return prop.alias || prop.name;\n      }).map(prop => self.getTableName().concat('.').concat(prop));\n    }\n\n    function resolveLimit(size) {\n      const staticSize = self.staticOptions.size;\n      if (self.parentAssociation && staticSize) {\n        return `LIMIT ${staticSize}`;\n      } else if (self.parentAssociation) {\n        return ``;\n      } else {\n        return size ? `LIMIT ${size}` : ``;\n      }\n    }\n    const where = resolvedOptions,\n          group = _.toArray(this.staticOptions.groupBy),\n          order = _.toArray(this.staticOptions.orderBy),\n          page  = options.page || this.staticOptions.page,\n          size  = options.size || this.staticOptions.size;\n\n    const clauses = {\n      where:  resolveWhere(resolvedOptions),\n      group:  resolveGroupBy(group),\n      order:  resolveOrderBy(order),\n      limit:  resolveLimit(options.size),\n      offset: resolveOffset(page, size),\n    };\n\n    // Renders only is a array within all the keys\n    // from \"clauses\" object above which will be present\n    // in the query.\n    if (rendersOnly.length) {\n      return rendersOnly.map(key => clauses[key]).join(' ');\n    } else {\n      return _.keys(clauses).map(key => clauses[key]).join(' ');\n    }\n  }\n\n  resolveOptionsWithValues(def, options) {\n\n    const definedOptionKeys = _.keys(options)\n      .filter(optionName => !!def.hasOwnProperty(optionName))\n\n    if (!definedOptionKeys.length) return '';\n\n    const optionValues = definedOptionKeys.map(optionName => {\n      const propName = def[optionName].replace(/\\W/g, '');\n      const propDefinitionFromSchema = this.schemaProperties.find(prop => prop.name === propName);\n      const definition = def[optionName];\n      const value = options[optionName];\n      const resolvedPropName = propDefinitionFromSchema.alias || propDefinitionFromSchema.name;\n      const operator = /\\W/.test(definition) ? definition.match(/\\W/)[0] : '=';\n\n      if (!propDefinitionFromSchema) {\n        throw new Error(`\"${propName}\" property from where clause not found in \"${this.name}\" schema properties.`);\n      }\n\n      const resolve = function() {\n        const operator = this.operator,\n              value    = this.value;\n        switch (operator) {\n          case '=':\n            return `=${_.quote(value)}`;\n          case '<>':\n            return `<>${_.quote(value)}`;\n          case '>':\n            return `>${value}`;\n          case '<':\n            return `<${value}`;\n          case '%':\n            return `LIKE ${_.quote('%' + value + '%')}`;\n          case '#':\n            return `GLOB ${_.quote(_.glob(value))}`;\n          case '|':\n            return ``;\n          case '&':\n            return ``;\n          default:\n            return '';\n        };\n      }\n\n      return {\n        name: resolvedPropName,\n        definition,\n        value,\n        operator,\n        resolve\n      };\n\n    }).map(opt => {\n      return `${this.getTableName()}.${opt.name} ${opt.resolve()}`;\n    });\n\n    return optionValues;\n  }\n\n  getSchemaPropertyConfig(propName) {\n    return this.schemaProperties.find(prop => prop.name === propName);\n  }\n\n  getAssociationName() {\n    return _.quote(this.name);\n  }\n\n  getDistinctPrimaryKey() {\n    return `DISTINCT ${this.getTableName()}.${this.getPrimaryKey()}`;\n  }\n\n  haveGroupByOption() {\n    return !!this.staticOptions.groupBy;\n  }\n\n}\n\nmodule.exports = QueryNode;","const _ = require('../utils');\nconst debug = require('../debugger');\n\nclass QueryResponse {\n\n  constructor(graph) {\n    this.shadow = this.createShadowFromGraph(graph);\n  }\n\n  createShadowFromGraph(graph) {\n    let shadow = {},\n        path;\n\n    graph.walk(node => {\n      const parentAssociation = node.parentAssociation;\n      const objectType = parentAssociation ? parentAssociation.objectType : 'object';\n\n      path = path ? objectType === 'array'\n          ? path.concat('.').concat(node.name) : path\n          : '$';\n\n      // When data from node is in array format, will try\n      // parse this node data removing the null rows.\n      if (objectType === 'array') {\n        shadow[path] = resolver.bind(this, [stripNulls]);\n      }\n  \n      node.definedProperties.filter(prop => {\n        return prop.type === 'primaryKey' ? !parentAssociation : true;\n      }).map(prop => {\n        const resolvers = [];\n        const propName = prop.type === 'primaryKey' ? '_id' : prop.name;\n\n        switch (prop.type) {\n          case 'boolean':\n            resolvers.push(toBoolean);\n            break;\n          case 'number':\n            resolvers.push(toNumber);\n            break;\n        };\n\n        if (_.isFunction(prop.parser)) {\n          resolvers.push(prop.parser);\n        }\n\n        const propPath = path.concat('.').concat(propName);\n\n        return resolvers.length ? {\n          [propPath]: resolver.bind(this, resolvers)\n        } : {};\n      }).forEach(prop => {\n        shadow = _.xtend(shadow, prop);\n      });\n\n    });\n    return shadow;\n  }\n\n  parse(rows) {\n    return (!rows || !rows.length) ? [] : rows.map(row => {\n      // Call resolvers\n      _.keys(this.shadow).forEach(path => {\n        const resolver = this.shadow[path];\n        path = path.replace(/^\\$\\./, '');\n        const resolvedValue = resolver(_.get(row, path));\n        _.set(row, path, resolvedValue);\n      });\n      // Remove undefined or nullable values from row object.\n      return _.pickBy(row);\n    });\n  }\n\n}\n\nmodule.exports = QueryResponse;\n\nconst resolver = function(resolvers, value) {\n  if (!resolvers || !resolvers.length) {\n    return value;\n  }\n  resolvers.forEach(resolver => value = resolver(value));\n  return value;\n}\n\nfunction toNumber(value) {\n  return parseInt(value);\n}\n\nfunction toBoolean(value) {\n  return !!value;\n}\n\nfunction stripNulls(value) {\n  return _.isArray(value) ? value.filter(v => v) : value;\n}","const _ = require('../../utils');\nconst debug = require('../../debugger');\n\nmodule.exports = function graphNodeResolver(node, options = {}, nextNodes, customResolver, parentNode) {\n\n  const objectType = node.getObjectType();\n\n  const struct = objectType === 'object'\n    ? `select json_patch(json_object($fields_as_json), ($next_nodes)) $object_name from (select $raw_fields $grouped_ids $source $show_options $options) $table_alias`\n    : `(select json_object($node_name, (select json_group_array(json_patch(json_object($fields_as_json), ($next_nodes))) from (select $raw_fields $grouped_ids $source $show_options $options) $table_alias)))`;\n\n  let nodeOptions = node.getOptions(options, ['group', 'order', 'limit', 'offset']);\n\n  // Fix: Root schema can not have \"limit\" nor \"offset\" options (this options)\n  // are filtered inside the specific where clauses condition outside this node.\n  if (!node.parentAssociation) {\n    nodeOptions = nodeOptions.replace(/LIMIT\\s\\d+/, '').replace(/OFFSET\\s\\d+/, '');\n  }\n\n  let query = struct\n      .replace(/\\$table_alias/,     node.getTableAlias())\n      .replace(/\\$raw_fields/,      node.getRawFields())\n      .replace(/\\$grouped_ids/,     node.parentAssociation ? customResolver('groupId') : '')\n      .replace(/\\$source/,          node.getSource(parentNode && parentNode.haveGroupByOption()))\n      .replace(/\\$fields_as_json/,  node.getFieldsAsJson())\n      .replace(/\\$object_name/,     node.getResponseObjectName())\n      .replace(/\\$node_name/,       node.getAssociationName())\n      .replace(/\\$next_nodes/,      nextNodes(options))\n      .replace(/\\$show_options/,    node.getShowOptions(options))\n      .replace(/\\$options/,         nodeOptions)\n\n  // Build the filter subquery in order to select the root schema\n  // identifiers that will be returned by the select.\n  if (!node.parentAssociation) {\n    const filterQuery = customResolver('filterId', options);\n    query += ` WHERE ${node.getTableAlias()}.${node.getPrimaryKey()} IN (${filterQuery})`;\n    query += ` AND ${node.getResponseObjectName()} IS NOT NULL;`;\n  }\n\n  query = _.query(query);\n\n  if (!node.parentAssociation) {\n    _.pbcopy(query);\n  }\n\n  return query;\n}","module.exports = function graphNodeOptionsResolver(node, options, nextNodes) {\n  return node.getOptions(options, [ 'where' ]) + nextNodes(options);\n}","const _ = require('../../utils');\nconst debug = require('../../debugger');\n\n// This resolver will add the json_group_array property into the query select area. The\n// grouped ids can be used by the next nested nodes when its parent data is grouped.\nmodule.exports = function graphNodeGroupIdsResolver(node, options, nextNodes, customResolver) {\n  return (!node.parentAssociation || !node.haveGroupByOption())\n    ? '' : _.toArray(node.parentAssociation).map(association => {\n      return `, json_group_array(${association.targetTable}.${association.targetKey}) AS id_${association.targetKey}`;\n    }).join(',').replace(/\\,\\,/g, ',').replace(/\\,$/, '');\n}","const _ = require('../../utils');\nconst debug = require('../../debugger');\n\n// Render the part of the query where the ids of the root schema will be fetch.\nmodule.exports = function graphRootNodeOptionsResolver(node, options, nextNodes, customResolver) {\n  const nextNodeQuery     = nextNodes().replace(/json_object\\(\\)/g, '');\n  const conditionClauses  = customResolver('options', options).replace(/json_object\\(\\)/g, '');\n  const resolvedOptions   = node.getOptions(options, [ 'group', 'order', 'limit', 'offset' ]);\n  return !!node.parentAssociation ? `${node.getJoin()} ${nextNodeQuery}`\n    : `SELECT ${node.getDistinctPrimaryKey()} ${node.getSource()} ${nextNodeQuery} ${conditionClauses} ${resolvedOptions}`;\n}"],"sourceRoot":""}